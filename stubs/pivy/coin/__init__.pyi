from enum import Enum, auto
from typing import Tuple, Iterable, List, overload, Any, Sequence, Union

class SoField():
    def __init__(self) -> None: ...

class SoSField(SoField):
    def __init__(self) -> None: ...

class SoSFEnum(SoSField):
    def __init__(self): ...

class SoMField(SoField):
    def __init__(self) -> None: ...

    def deleteValues(self, start: int, num: int = -1): ...

class SoMFFloat(SoMField):
    def __init__(self) -> None: ...

    def setValue(self, float) -> None: ...

class SoBase():
    def __init__(self) -> None: ...

class SoFieldContainer(SoBase):
    def __init__(self) -> None: ...

class SoPath(SoBase):
    def __init__(self) -> None: ...

class SoEngine(SoFieldContainer):
    def __init__(self) -> None: ...

class SoNode(SoFieldContainer):
    def __init__(self) -> None: ...

class SoCoordinate3(SoNode):
    def __init__(self) -> None:
        self.point = SoMFVec3f()

class SoDrawStyle(SoNode):
    FILLED = SoSFEnum()
    LINES = SoSFEnum()
    POINTS = SoSFEnum()
    INVISIBLE = SoSFEnum()

    def __init__(self) -> None:
        self.style: SoSFEnum = ...
        self.pointSize: SoSFFloat = ...
        self.lineWidth: SoSFFloat = ...
        self.linePattern: SoSFUShort = ...
        self.linePatternScaleFactor: SoSFInt32 = ...

class SoGroup(SoNode):
    def __init__(self) -> None: ...

    def addChild(self, n: SoNode) -> None: ...
    def removeChild(self, child_index: int) -> None: ...
    def insertChild(self, n: SoNode, child_index: int) -> None: ...

class SoShapeHintsElement:
    class VertexOrdering():
        UNKNOWN_ORDERING = SoSFEnum()
        CLOCKWISE = SoSFEnum()
        COUNTERCLOCKWISE = SoSFEnum()
        ORDERING_AS_IS = SoSFEnum()

    class ShapeType():
        UNKNOWN_SHAPE_TYPE = SoSFEnum()
        SOLID = SoSFEnum()
        SHAPE_TYPE_AS_IS = SoSFEnum()

    class FaceType():
        UNKNOWN_FACE_TYPE = SoSFEnum()
        CONVEX = SoSFEnum()
        FACE_TYPE_AS_IS = SoSFEnum()

class SoShapeHints(SoNode):
    UNKNOWN_ORDERING = SoShapeHintsElement.VertexOrdering.UNKNOWN_ORDERING
    CLOCKWISE = SoShapeHintsElement.VertexOrdering.CLOCKWISE
    COUNTERCLOCKWISE = SoShapeHintsElement.VertexOrdering.COUNTERCLOCKWISE
    UNKNOWN_SHAPE_TYPE = SoShapeHintsElement.ShapeType.UNKNOWN_SHAPE_TYPE
    SOLID = SoShapeHintsElement.ShapeType.SOLID

    UNKNOWN_FACE_TYPE = SoShapeHintsElement.FaceType.UNKNOWN_FACE_TYPE
    CONVEX = SoShapeHintsElement.FaceType.CONVEX

    def __init__(self) -> None:
        self.faceType = SoSFEnum()

class SoSeparator(SoGroup):
    def __init__(self) -> None: ...

class SoAnnotation(SoSeparator):
    def __init__(self) -> None: ...

class SoShape( SoNode):
    def __init__(self) -> None: ...

class SoVertexShape( SoShape):
    def __init__(self) -> None: ...

class SoIndexedShape(SoVertexShape):
    def __init__(self) -> None:
        self.coordIndex = SoMFInt32()

class SoIndexedFaceSet(SoIndexedShape):
    def __init__(self) -> None: ...

class SoIndexedLineSet(SoIndexedShape):
    def __init__(self) -> None: ...

class SoMFColor:
    def __init__(self) -> None: ...

    def setValue(self, value): ...

class SoMaterial(SoNode):
    def __init__(self):
        self.diffuseColor = SoMFColor()
        self.transparency = SoMFFloat()

class SbName(object):
    def __init__(self, name: str) -> None:
        ...

class SoType:
    def __init__(self) -> None: ...

    @staticmethod
    def fromName(name: Union[SbName, str]) -> SoType: ...

    def createInstance(self) -> Any: ...

class SoSFFloat:
    def __init__(self) -> None: ...

    def getValue(self) -> float: ...
    def setValue(self, value: float) -> None: ...

class SoSFInt32:
    def __init__(self) -> None: ...

    def getValue(self) -> int: ...
    def setValue(self, value: int) -> None: ...

class SoMFInt32(SoMField):
    def __init__(self) -> None: ...

    def getValue(self) -> int: ...
    def setValue(self, value: int) -> None: ...
    def setValues(self, start: int, num: int, newVals: Sequence[int]) -> None: ...

class SoMFVec3f(SoMField):
    def __init__(self) -> None: ...

    @overload
    def setValue(self, x: float, y: float, z: float) -> None: ...
    @overload
    def setValue(self, v: SbVec3f) -> None: ...

    def set1Value(self, index: int, x: float, y: float, z: float): ...
    @overload
    def setValues(self, start: int, num: int, newVals: Sequence[SbVec3f]) -> None: ...
    @overload
    def setValues(self, start: int, num: int, newVals: Sequence[Sequence[float]]) -> None: ...
    @overload
    def setValues(self, newVals: Sequence[Tuple[float, float, float]]) -> None: ...


class SoSFUShort:
    def __init__(self) -> None: ...

    def getValue(self) -> int: ...
    def setValue(self, value: int) -> None: ...

class SbVec3f:
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, x: float, y: float, z: float): ...
    def getValue(self) -> Tuple[float, float, float]: ...
    def __iter__(self) -> Iterable[float]: ...

class SbPlane:
    @overload
    def __init__(self) -> None: ...
    @overload
    def __init__(self, p0: SbVec3f, p1: SbVec3f, p2: SbVec3f) -> None: ...
    @overload
    def __init__(self, normal: SbVec3f, D: float) -> None: ...
    @overload
    def __init__(self, normal: SbVec3f, point: SbVec3f) -> None: ...

class SoClipPlane(SoNode):
    def __init__(self) -> None: ...

class SoSFVec3f:
    def __init__(self): ...
    def getValue(self) -> SbVec3f: ...

    @overload
    def setValue(self, value: List[float]) -> None: ...

    @overload
    def setValue(self, value: Tuple[float, float, float]) -> None: ...

    @overload
    def setValue(self, value: Tuple[float, ...]) -> None: ...

class SbRotation:
    def __init__(self): ...

    def getValue(self) -> SbVec3f: ...

class SoSFRotation:
    def __init__(self): ...

    @overload
    def setValue(self, value: List[float]) -> None: ...

    @overload
    def setValue(self, value: Tuple[float, float, float]) -> None: ...

    @overload
    def setValue(self, value: Tuple[float, float, float, float]) -> None: ...

    def getValue(self) -> SbRotation: ...

class SoCamera:
    position: SoSFVec3f
    orientation: SoSFRotation
    nearDistance: SoSFFloat
    farDistance: SoSFFloat
    aspectRatio: SoSFFloat
    focalDistance: SoSFFloat

    def __init__(self): ...

class SoOrthographicCamera(SoCamera):
    height: SoSFFloat

    def __init__(self) -> None: ...

class SoPerspectiveCamera(SoCamera):
    heightAngle: SoSFFloat

    def __init__(self) -> None: ...
